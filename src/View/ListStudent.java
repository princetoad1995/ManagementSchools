/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAOImpl.StudentDAOImpl;
import Model.Student;
import Model.ClassName;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PRINCE D. TOAD
 */
public class ListStudent extends javax.swing.JFrame {

    private List<ClassName> listClass;
    private List<Student> listStudent;
    private DefaultTableModel tbDefaultStudent;
    private StudentDAOImpl studentDAO = new StudentDAOImpl();
    private float point = 0;
    int row = -1;
    Student student;

    /**
     * Creates new form ListStudent
     */
    public ListStudent() {
        initComponents();
        this.tbDefaultStudent = (DefaultTableModel) tbStudent.getModel();

        loadClassName();
        loadAllStudent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbClass = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbStudent = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnRefesh = new javax.swing.JButton();
        btnView = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Danh sách sinh viên");

        cbClass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tất cả" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Chọn lớp :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Nhập tên :");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setText("Tìm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tbStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Tên SV", "Lớp", "Điểm TB"
            }
        ));
        tbStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbStudentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbStudent);

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDel.setText("Xóa");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnRefesh.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnRefesh.setText("Tải lại");
        btnRefesh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefeshActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnView.setText("Xem chi tiết");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(236, 236, 236))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(cbClass, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd)
                .addGap(57, 57, 57)
                .addComponent(btnView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEdit)
                .addGap(72, 72, 72)
                .addComponent(btnDel)
                .addGap(57, 57, 57)
                .addComponent(btnRefesh)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnDel)
                    .addComponent(btnRefesh, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Bat su kien click nut tim

        if (txtName.getText().equals("")) {
            listStudent = null;
            if (cbClass.getSelectedItem().toString().equals("Tất cả")) {
                loadAllStudent();
            } else {
                point = 0;
                listStudent = studentDAO.getListStudentByClass(studentDAO.getIdClass(cbClass.getSelectedItem().toString()));

                if (listStudent.size() != 0) {
                    tbDefaultStudent.getDataVector().removeAllElements();
                    for (Student st : listStudent) {

                        point = (float) (st.getPointMath() + st.getPointPhysical() + st.getPointChemistry() + st.getPointBiological()) / 4;
                        tbDefaultStudent.addRow(new Object[]{
                            st.getId(),
                            st.getFullname(),
                            new StudentDAOImpl().getClassName(st.getNameClass().getId()),
                            point
                        });
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy dữ liệu");
                }

            }
        } else {
            if (cbClass.getSelectedItem().toString().equals("Tất cả")) {
                point = 0;
                listStudent = studentDAO.getListStudentByName(txtName.getText());

                if (listStudent.size() != 0) {
                    tbDefaultStudent.getDataVector().removeAllElements();
                    for (Student st : listStudent) {
                        point = (float) (st.getPointMath() + st.getPointPhysical() + st.getPointChemistry() + st.getPointBiological()) / 4;
                        tbDefaultStudent.addRow(new Object[]{
                            st.getId(),
                            st.getFullname(),
                            new StudentDAOImpl().getClassName(st.getNameClass().getId()),
                            point
                        });
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy dữ liệu");
                }
            } else {
                listStudent = null;
                point = 0;
                listStudent = studentDAO.getListStudentByNameByIdClass(studentDAO.getIdClass(cbClass.getSelectedItem().toString()), txtName.getText());
                if (listStudent.size() != 0) {
                    tbDefaultStudent.getDataVector().removeAllElements();

                    for (Student st : listStudent) {
                        point = (float) (st.getPointMath() + st.getPointPhysical() + st.getPointChemistry() + st.getPointBiological()) / 4;
                        tbDefaultStudent.addRow(new Object[]{
                            st.getId(),
                            st.getFullname(),
                            new StudentDAOImpl().getClassName(st.getNameClass().getId()),
                            point
                        });
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy dữ liệu");
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn sinh viên xem.");
            return;
        } else {
            ViewStudent frmViewStudent = new ViewStudent(student, true);
            frmViewStudent.setVisible(true);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void tbStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbStudentMouseClicked
        // TODO add your handling code here:
        row = tbStudent.getSelectedRow();
        student = new Student();
        student = studentDAO.getItemClassName((Integer) tbDefaultStudent.getValueAt(row, 0)); // lấy sinh viên có id tại điểm click
    }//GEN-LAST:event_tbStudentMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn sinh viên sửa.");
            return;
        } else {
            FormStudent frmEditStudent = new FormStudent(student, 1);
            frmEditStudent.setVisible(true);
        }

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        FormStudent frmEditStudent = new FormStudent(0);
        frmEditStudent.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRefeshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefeshActionPerformed
        // TODO add your handling code here:
        loadAllStudent();
    }//GEN-LAST:event_btnRefeshActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn sinh viên xóa.");
            return;
        } else {
            studentDAO.deleteStudent((Integer) tbDefaultStudent.getValueAt(row, 0));
            JOptionPane.showMessageDialog(this, "Xóa thành công.");
        }

    }//GEN-LAST:event_btnDelActionPerformed

    public void loadClassName() {
        listClass = studentDAO.getAllListClassName();
        for (ClassName className : listClass) {
            cbClass.addItem(className.getName());
        }
    }

    public void loadAllStudent() {
        point = 0;
        listStudent = studentDAO.getAllListStudent();
        tbDefaultStudent.getDataVector().removeAllElements();

        for (Student st : listStudent) {
            point = (float) (st.getPointMath() + st.getPointPhysical() + st.getPointChemistry() + st.getPointBiological()) / 4;
            tbDefaultStudent.addRow(new Object[]{
                st.getId(),
                st.getFullname(),
                new StudentDAOImpl().getClassName(st.getNameClass().getId()),
                point
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRefesh;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox cbClass;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbStudent;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
